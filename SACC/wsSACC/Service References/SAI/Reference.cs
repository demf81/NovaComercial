//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace wsSACC.SAI {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SAI.ISAI")]
    public interface ISAI {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/Version", ReplyAction="http://tempuri.org/ISAI/VersionResponse")]
        string Version();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/Version", ReplyAction="http://tempuri.org/ISAI/VersionResponse")]
        System.Threading.Tasks.Task<string> VersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/ObtenerFoto", ReplyAction="http://tempuri.org/ISAI/ObtenerFotoResponse")]
        byte[] ObtenerFoto(string Dominio, string CuentaRed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/ObtenerFoto", ReplyAction="http://tempuri.org/ISAI/ObtenerFotoResponse")]
        System.Threading.Tasks.Task<byte[]> ObtenerFotoAsync(string Dominio, string CuentaRed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/ObtenerConfiguracionSistema", ReplyAction="http://tempuri.org/ISAI/ObtenerConfiguracionSistemaResponse")]
        System.Data.DataSet ObtenerConfiguracionSistema(int SistemaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/ObtenerConfiguracionSistema", ReplyAction="http://tempuri.org/ISAI/ObtenerConfiguracionSistemaResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerConfiguracionSistemaAsync(int SistemaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/BuscaAmbientePorLlave", ReplyAction="http://tempuri.org/ISAI/BuscaAmbientePorLlaveResponse")]
        System.Data.DataSet BuscaAmbientePorLlave(string Llave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/BuscaAmbientePorLlave", ReplyAction="http://tempuri.org/ISAI/BuscaAmbientePorLlaveResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscaAmbientePorLlaveAsync(string Llave);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/AgregarAmbienteSAP", ReplyAction="http://tempuri.org/ISAI/AgregarAmbienteSAPResponse")]
        string AgregarAmbienteSAP(string SistemaId, string Mandante, string UsuarioSAP, string NumeroSistema, string Lenguaje, int PoolSize, int IdleTimeout, string ClaveSAP, string ServidorSAP, System.Nullable<int> UsuarioModificacionId, System.Nullable<bool> Baja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/AgregarAmbienteSAP", ReplyAction="http://tempuri.org/ISAI/AgregarAmbienteSAPResponse")]
        System.Threading.Tasks.Task<string> AgregarAmbienteSAPAsync(string SistemaId, string Mandante, string UsuarioSAP, string NumeroSistema, string Lenguaje, int PoolSize, int IdleTimeout, string ClaveSAP, string ServidorSAP, System.Nullable<int> UsuarioModificacionId, System.Nullable<bool> Baja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/ActualizaAmbienteSAP", ReplyAction="http://tempuri.org/ISAI/ActualizaAmbienteSAPResponse")]
        int ActualizaAmbienteSAP(int AmbienteSAPId, string SistemaId, string Mandante, string UsuarioSAP, string NumeroSistema, string Lenguaje, int PoolSize, int IdleTimeout, string ClaveSAP, string ServidorSAP, System.Nullable<int> UsuarioModificacionId, System.Nullable<bool> Baja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/ActualizaAmbienteSAP", ReplyAction="http://tempuri.org/ISAI/ActualizaAmbienteSAPResponse")]
        System.Threading.Tasks.Task<int> ActualizaAmbienteSAPAsync(int AmbienteSAPId, string SistemaId, string Mandante, string UsuarioSAP, string NumeroSistema, string Lenguaje, int PoolSize, int IdleTimeout, string ClaveSAP, string ServidorSAP, System.Nullable<int> UsuarioModificacionId, System.Nullable<bool> Baja);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/DesencriptaClave", ReplyAction="http://tempuri.org/ISAI/DesencriptaClaveResponse")]
        string DesencriptaClave(string Llave, string Texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/DesencriptaClave", ReplyAction="http://tempuri.org/ISAI/DesencriptaClaveResponse")]
        System.Threading.Tasks.Task<string> DesencriptaClaveAsync(string Llave, string Texto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/BuscaUsuarioSAIPorId", ReplyAction="http://tempuri.org/ISAI/BuscaUsuarioSAIPorIdResponse")]
        System.Data.DataSet BuscaUsuarioSAIPorId(int UsuarioId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/BuscaUsuarioSAIPorId", ReplyAction="http://tempuri.org/ISAI/BuscaUsuarioSAIPorIdResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscaUsuarioSAIPorIdAsync(int UsuarioId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/BuscaUsuarioSAIPorCuentaRed", ReplyAction="http://tempuri.org/ISAI/BuscaUsuarioSAIPorCuentaRedResponse")]
        System.Data.DataSet BuscaUsuarioSAIPorCuentaRed(string CuentaRed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/BuscaUsuarioSAIPorCuentaRed", ReplyAction="http://tempuri.org/ISAI/BuscaUsuarioSAIPorCuentaRedResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscaUsuarioSAIPorCuentaRedAsync(string CuentaRed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/ObtenerUsuario", ReplyAction="http://tempuri.org/ISAI/ObtenerUsuarioResponse")]
        System.Data.DataSet ObtenerUsuario(string Dominio, string CuentaRed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/ObtenerUsuario", ReplyAction="http://tempuri.org/ISAI/ObtenerUsuarioResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerUsuarioAsync(string Dominio, string CuentaRed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/AutenticarUsuario", ReplyAction="http://tempuri.org/ISAI/AutenticarUsuarioResponse")]
        SACC.LogicaNegocio.SAI.Autenticar AutenticarUsuario(string Dominio, string CuentaRed, string Contraseña, System.Nullable<int> Sistema);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/AutenticarUsuario", ReplyAction="http://tempuri.org/ISAI/AutenticarUsuarioResponse")]
        System.Threading.Tasks.Task<SACC.LogicaNegocio.SAI.Autenticar> AutenticarUsuarioAsync(string Dominio, string CuentaRed, string Contraseña, System.Nullable<int> Sistema);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/AutenticarExterno", ReplyAction="http://tempuri.org/ISAI/AutenticarExternoResponse")]
        SACC.LogicaNegocio.SAI.Mensaje AutenticarExterno(SACC.LogicaNegocio.SAI.Token token, int pServicioId, int pMetodoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/AutenticarExterno", ReplyAction="http://tempuri.org/ISAI/AutenticarExternoResponse")]
        System.Threading.Tasks.Task<SACC.LogicaNegocio.SAI.Mensaje> AutenticarExternoAsync(SACC.LogicaNegocio.SAI.Token token, int pServicioId, int pMetodoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/AgregarUsuario", ReplyAction="http://tempuri.org/ISAI/AgregarUsuarioResponse")]
        int AgregarUsuario(string Dominio, string CuentaRed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/AgregarUsuario", ReplyAction="http://tempuri.org/ISAI/AgregarUsuarioResponse")]
        System.Threading.Tasks.Task<int> AgregarUsuarioAsync(string Dominio, string CuentaRed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/AgregarUsuarioSistema", ReplyAction="http://tempuri.org/ISAI/AgregarUsuarioSistemaResponse")]
        bool AgregarUsuarioSistema(int UsuarioId, int SistemaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/AgregarUsuarioSistema", ReplyAction="http://tempuri.org/ISAI/AgregarUsuarioSistemaResponse")]
        System.Threading.Tasks.Task<bool> AgregarUsuarioSistemaAsync(int UsuarioId, int SistemaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/ObtenerPermisos", ReplyAction="http://tempuri.org/ISAI/ObtenerPermisosResponse")]
        System.Data.DataSet ObtenerPermisos(int SistemaId, string CuentaRed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISAI/ObtenerPermisos", ReplyAction="http://tempuri.org/ISAI/ObtenerPermisosResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> ObtenerPermisosAsync(int SistemaId, string CuentaRed);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISAIChannel : wsSACC.SAI.ISAI, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SAIClient : System.ServiceModel.ClientBase<wsSACC.SAI.ISAI>, wsSACC.SAI.ISAI {
        
        public SAIClient() {
        }
        
        public SAIClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SAIClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SAIClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SAIClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Version() {
            return base.Channel.Version();
        }
        
        public System.Threading.Tasks.Task<string> VersionAsync() {
            return base.Channel.VersionAsync();
        }
        
        public byte[] ObtenerFoto(string Dominio, string CuentaRed) {
            return base.Channel.ObtenerFoto(Dominio, CuentaRed);
        }
        
        public System.Threading.Tasks.Task<byte[]> ObtenerFotoAsync(string Dominio, string CuentaRed) {
            return base.Channel.ObtenerFotoAsync(Dominio, CuentaRed);
        }
        
        public System.Data.DataSet ObtenerConfiguracionSistema(int SistemaId) {
            return base.Channel.ObtenerConfiguracionSistema(SistemaId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerConfiguracionSistemaAsync(int SistemaId) {
            return base.Channel.ObtenerConfiguracionSistemaAsync(SistemaId);
        }
        
        public System.Data.DataSet BuscaAmbientePorLlave(string Llave) {
            return base.Channel.BuscaAmbientePorLlave(Llave);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscaAmbientePorLlaveAsync(string Llave) {
            return base.Channel.BuscaAmbientePorLlaveAsync(Llave);
        }
        
        public string AgregarAmbienteSAP(string SistemaId, string Mandante, string UsuarioSAP, string NumeroSistema, string Lenguaje, int PoolSize, int IdleTimeout, string ClaveSAP, string ServidorSAP, System.Nullable<int> UsuarioModificacionId, System.Nullable<bool> Baja) {
            return base.Channel.AgregarAmbienteSAP(SistemaId, Mandante, UsuarioSAP, NumeroSistema, Lenguaje, PoolSize, IdleTimeout, ClaveSAP, ServidorSAP, UsuarioModificacionId, Baja);
        }
        
        public System.Threading.Tasks.Task<string> AgregarAmbienteSAPAsync(string SistemaId, string Mandante, string UsuarioSAP, string NumeroSistema, string Lenguaje, int PoolSize, int IdleTimeout, string ClaveSAP, string ServidorSAP, System.Nullable<int> UsuarioModificacionId, System.Nullable<bool> Baja) {
            return base.Channel.AgregarAmbienteSAPAsync(SistemaId, Mandante, UsuarioSAP, NumeroSistema, Lenguaje, PoolSize, IdleTimeout, ClaveSAP, ServidorSAP, UsuarioModificacionId, Baja);
        }
        
        public int ActualizaAmbienteSAP(int AmbienteSAPId, string SistemaId, string Mandante, string UsuarioSAP, string NumeroSistema, string Lenguaje, int PoolSize, int IdleTimeout, string ClaveSAP, string ServidorSAP, System.Nullable<int> UsuarioModificacionId, System.Nullable<bool> Baja) {
            return base.Channel.ActualizaAmbienteSAP(AmbienteSAPId, SistemaId, Mandante, UsuarioSAP, NumeroSistema, Lenguaje, PoolSize, IdleTimeout, ClaveSAP, ServidorSAP, UsuarioModificacionId, Baja);
        }
        
        public System.Threading.Tasks.Task<int> ActualizaAmbienteSAPAsync(int AmbienteSAPId, string SistemaId, string Mandante, string UsuarioSAP, string NumeroSistema, string Lenguaje, int PoolSize, int IdleTimeout, string ClaveSAP, string ServidorSAP, System.Nullable<int> UsuarioModificacionId, System.Nullable<bool> Baja) {
            return base.Channel.ActualizaAmbienteSAPAsync(AmbienteSAPId, SistemaId, Mandante, UsuarioSAP, NumeroSistema, Lenguaje, PoolSize, IdleTimeout, ClaveSAP, ServidorSAP, UsuarioModificacionId, Baja);
        }
        
        public string DesencriptaClave(string Llave, string Texto) {
            return base.Channel.DesencriptaClave(Llave, Texto);
        }
        
        public System.Threading.Tasks.Task<string> DesencriptaClaveAsync(string Llave, string Texto) {
            return base.Channel.DesencriptaClaveAsync(Llave, Texto);
        }
        
        public System.Data.DataSet BuscaUsuarioSAIPorId(int UsuarioId) {
            return base.Channel.BuscaUsuarioSAIPorId(UsuarioId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscaUsuarioSAIPorIdAsync(int UsuarioId) {
            return base.Channel.BuscaUsuarioSAIPorIdAsync(UsuarioId);
        }
        
        public System.Data.DataSet BuscaUsuarioSAIPorCuentaRed(string CuentaRed) {
            return base.Channel.BuscaUsuarioSAIPorCuentaRed(CuentaRed);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscaUsuarioSAIPorCuentaRedAsync(string CuentaRed) {
            return base.Channel.BuscaUsuarioSAIPorCuentaRedAsync(CuentaRed);
        }
        
        public System.Data.DataSet ObtenerUsuario(string Dominio, string CuentaRed) {
            return base.Channel.ObtenerUsuario(Dominio, CuentaRed);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerUsuarioAsync(string Dominio, string CuentaRed) {
            return base.Channel.ObtenerUsuarioAsync(Dominio, CuentaRed);
        }
        
        public SACC.LogicaNegocio.SAI.Autenticar AutenticarUsuario(string Dominio, string CuentaRed, string Contraseña, System.Nullable<int> Sistema) {
            return base.Channel.AutenticarUsuario(Dominio, CuentaRed, Contraseña, Sistema);
        }
        
        public System.Threading.Tasks.Task<SACC.LogicaNegocio.SAI.Autenticar> AutenticarUsuarioAsync(string Dominio, string CuentaRed, string Contraseña, System.Nullable<int> Sistema) {
            return base.Channel.AutenticarUsuarioAsync(Dominio, CuentaRed, Contraseña, Sistema);
        }
        
        public SACC.LogicaNegocio.SAI.Mensaje AutenticarExterno(SACC.LogicaNegocio.SAI.Token token, int pServicioId, int pMetodoId) {
            return base.Channel.AutenticarExterno(token, pServicioId, pMetodoId);
        }
        
        public System.Threading.Tasks.Task<SACC.LogicaNegocio.SAI.Mensaje> AutenticarExternoAsync(SACC.LogicaNegocio.SAI.Token token, int pServicioId, int pMetodoId) {
            return base.Channel.AutenticarExternoAsync(token, pServicioId, pMetodoId);
        }
        
        public int AgregarUsuario(string Dominio, string CuentaRed) {
            return base.Channel.AgregarUsuario(Dominio, CuentaRed);
        }
        
        public System.Threading.Tasks.Task<int> AgregarUsuarioAsync(string Dominio, string CuentaRed) {
            return base.Channel.AgregarUsuarioAsync(Dominio, CuentaRed);
        }
        
        public bool AgregarUsuarioSistema(int UsuarioId, int SistemaId) {
            return base.Channel.AgregarUsuarioSistema(UsuarioId, SistemaId);
        }
        
        public System.Threading.Tasks.Task<bool> AgregarUsuarioSistemaAsync(int UsuarioId, int SistemaId) {
            return base.Channel.AgregarUsuarioSistemaAsync(UsuarioId, SistemaId);
        }
        
        public System.Data.DataSet ObtenerPermisos(int SistemaId, string CuentaRed) {
            return base.Channel.ObtenerPermisos(SistemaId, CuentaRed);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ObtenerPermisosAsync(int SistemaId, string CuentaRed) {
            return base.Channel.ObtenerPermisosAsync(SistemaId, CuentaRed);
        }
    }
}
